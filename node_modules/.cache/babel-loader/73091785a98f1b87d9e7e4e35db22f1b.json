{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/GA/sei29/Project2/spacefaxcts/src/rovers/Mission.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mission() {\n  _s();\n\n  const [missionPhotos, setMissionPhotos] = useState([]);\n  let {\n    id\n  } = useParams();\n  let rover = \"\";\n  let sol = \"\";\n\n  if (id === \"spirit-mission\") {\n    rover = \"Spirit\";\n    sol = Math.floor(Math.random() * 2208);\n  } else if (id === \"opportunity-mission\") {\n    rover = \"Opportunity\";\n    sol = Math.floor(Math.random() * 5111);\n  } else if (id === \"curiosity-mission\") {\n    rover = \"Curiosity\";\n    sol = Math.floor(Math.random() * 3134);\n  } //try to get it to fetch until res.data.photos does not return an empty array\n\n\n  useEffect(() => {\n    if (missionPhotos.length === 0) {\n      axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=navcam&api_key=Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x`).then(res => {\n        setMissionPhotos(res.data.photos);\n        console.log(missionPhotos);\n      });\n    }\n\n    console.log(missionPhotos);\n  }, [missionPhotos, rover, sol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mission-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mission-title\",\n          children: [\"Mission Photos from \", rover]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mission-description\",\n          children: \"Our Universe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll\",\n          children: \"scroll placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-2\",\n        children: [missionPhotos.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mission-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"mission-image\",\n              src: el.img_src,\n              alt: \"daily space image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"sol: \", el.sol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", el.earth_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mission-content\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mission-content-title\",\n              children: [\"Taken on \", rover, \"'s \", el.camera.full_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1 sol = 1 solar day on Mars (24h 39mins 35s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mission, \"d8zfdgn97Pc3C+KV26AbyfAmLU8=\", false, function () {\n  return [useParams];\n});\n\n_c = Mission;\nexport default Mission; // Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x\n// https://api.nasa.gov/mars-photos/api/v1/rovers/{rover}/photos?sol={sol}&camera=navcam&api_key=Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x\n\nvar _c;\n\n$RefreshReg$(_c, \"Mission\");","map":{"version":3,"sources":["/Users/nigel/Documents/GA/sei29/Project2/spacefaxcts/src/rovers/Mission.js"],"names":["React","useEffect","useState","useParams","axios","Image","Mission","missionPhotos","setMissionPhotos","id","rover","sol","Math","floor","random","length","get","then","res","data","photos","console","log","map","el","img_src","earth_date","camera","full_name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {Image} from \"react-bootstrap\";\n\nfunction Mission() {\n\n    const [missionPhotos, setMissionPhotos] = useState([]);\n    let {id} = useParams();\n    let rover = \"\";\n    let sol = \"\";\n\n    if (id === \"spirit-mission\"){\n        rover = \"Spirit\";\n        sol = Math.floor(Math.random() * 2208)\n        }\n    else if( id === \"opportunity-mission\"){\n        rover = \"Opportunity\";\n        sol = Math.floor(Math.random() * 5111)\n    }\n    else if( id === \"curiosity-mission\"){\n        rover = \"Curiosity\";\n        sol = Math.floor(Math.random() * 3134)\n    }\n\n    //try to get it to fetch until res.data.photos does not return an empty array\n    useEffect(() => {\n        if (missionPhotos.length === 0){\n            axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=navcam&api_key=Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x`)\n                .then(res =>{\n                    setMissionPhotos(res.data.photos)\n                    console.log(missionPhotos)\n                })\n        }\n        console.log(missionPhotos)\n    },[missionPhotos, rover, sol])\n\n    return (\n        <div>\n            <div className=\"mission-container\">\n                <div className=\"section-1\">\n                    <h1 className=\"mission-title\">Mission Photos from {rover}</h1>\n                    <p className=\"mission-description\">Our Universe</p>\n                    <div className=\"scroll\">scroll placeholder</div>\n                </div>\n                <div className=\"section-2\">\n\n                    {missionPhotos.map((el) =>(\n                        <div className=\"split\">\n                            <div className=\"mission-image-container\">\n                                <Image className=\"mission-image\" src={el.img_src} alt=\"daily space image\" />\n                                <p>sol: {el.sol}</p>\n                                <p>Date: {el.earth_date}</p>\n                            </div>\n                            <div className=\"mission-content\">\n                                <h3 className=\"mission-content-title\">Taken on {rover}'s {el.camera.full_name}</h3>\n                            </div>\n                        </div>\n                        ))}\n                    <p>1 sol = 1 solar day on Mars (24h 39mins 35s)</p>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Mission;\n\n// Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x\n// https://api.nasa.gov/mars-photos/api/v1/rovers/{rover}/photos?sol={sol}&camera=navcam&api_key=Dvef1dOc51iUgHDH93ncfcFAbriP6uDccUuTIo4x"]},"metadata":{},"sourceType":"module"}